[{"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/index.js":"1","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/NavBar.js":"2","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/BubbleSort.js":"3","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/Body.js":"4","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/rootReducer.js":"5","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actionTypes.js":"6","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actions.js":"7","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Containers/BodyContainer.js":"8","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/randomArray.js":"9"},{"size":785,"mtime":1609169796084,"results":"10","hashOfConfig":"11"},{"size":3876,"mtime":1609172510177,"results":"12","hashOfConfig":"11"},{"size":1391,"mtime":1609171914856,"results":"13","hashOfConfig":"11"},{"size":1617,"mtime":1609170524318,"results":"14","hashOfConfig":"11"},{"size":1886,"mtime":1609171401281,"results":"15","hashOfConfig":"11"},{"size":365,"mtime":1609170656304,"results":"16","hashOfConfig":"11"},{"size":1033,"mtime":1609171310900,"results":"17","hashOfConfig":"11"},{"size":221,"mtime":1608739070443,"results":"18","hashOfConfig":"11"},{"size":519,"mtime":1609169796082,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nhkvj8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/index.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/NavBar.js",["39","40","41","42"],"import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { BubbleSort } from \"../Algorithms/BubbleSort\"\nimport { generateColorArray, randomizeArray } from \"../Algorithms/randomArray\"\nimport {\n  changeBarColor,\n  changeBarHeight,\n  setColorArray,\n  setRandomArray,\n  setSortedArray,\n  setIsSorting,\n  setFinishedSorting,\n  swapStyles,\n} from \"../Redux/actions\"\n\nclass NavBar extends React.Component {\n  state = {\n    arrayLength: 100,\n  }\n\n  styleSwapHandler = (e) => {\n    let currentStyle = this.props.style\n    switch (currentStyle) {\n      case \"bars\":\n        return this.props.dispatchStyleSwap(\"gradient\")\n      case \"gradient\":\n        return this.props.dispatchStyleSwap(\"bars\")\n      default:\n        return this.props.dispatchStyleSwap(currentStyle)\n    }\n  }\n\n  componentDidMount() {\n    this.newArrayHandler()\n  }\n\n  arrayLengthHandler = (e) => {\n    this.setState({ arrayLength: e.target.value }, this.newArrayHandler)\n  }\n\n  newArrayHandler = () => {\n    this.props.dispatchRandomArray(randomizeArray(this.state.arrayLength))\n    this.props.dispatchColorArray(\n      generateColorArray(this.state.arrayLength, \"red\")\n    )\n  }\n\n  sortHandler = () => {\n    this.props.dispatchSetIsSorting()\n    BubbleSort(\n      this.props.randomArray,\n      this.state.arrayLength,\n      (height, index) => this.props.changeBarHeight(height, index),\n      (color, index) => this.props.changeBarColor(color, index),\n      0,\n      this.props.arrayColor,\n      \"yellow\",\n      \"blue\",\n      this.props.dispatchSetFinishedSorting\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <nav>\n          <div className=\"nav-wrapper\">\n            <a className=\"brand-logo right\">Sorting Algorithm Visualizer</a>\n            <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n              <li>Set Array Size: </li>\n\n              <li>\n                <form action=\"#\">\n                  <div className=\"range-field\">\n                    <input\n                      type=\"range\"\n                      id=\"test5\"\n                      min=\"10\"\n                      max=\"200\"\n                      onChange={this.props.isSorting ? null : this.arrayLengthHandler}\n                    />\n                  </div>\n                </form>\n              </li>\n              <li>\n                <div class=\"switch\">\n                  <label>\n                    <input type=\"checkbox\" />\n                    <span onClick={this.styleSwapHandler} class=\"lever\"></span>\n                  </label>\n                </div>\n              </li>\n              <li>\n                <a onClick={this.props.isSorting ? null : this.newArrayHandler}>Generate New Array</a>\n              </li>\n              <li>\n                <a onClick={this.props.isSorting ? null : null}>BubbleSort</a>\n              </li>\n              <li>\n                <a onClick={this.props.isSorting ? null : this.sortHandler}>Sort!</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </>\n    )\n  }\n}\n\nfunction msp(state) {\n  return {\n    isSorting: state.isSorting,\n    randomArray: state.randomArray,\n    sortedArray: state.sortedArray,\n    style: state.style,\n  }\n}\n\nfunction mdp(dispatch) {\n  return {\n    dispatchRandomArray: (randomArray) => dispatch(setRandomArray(randomArray)),\n    dispatchSortedArray: (sortedArray) => dispatch(setSortedArray(sortedArray)),\n    dispatchSetIsSorting: () => dispatch(setIsSorting()),\n    dispatchSetFinishedSorting: () => dispatch(setFinishedSorting()),\n    changeBarHeight: (newHeight, index) =>\n      dispatch(changeBarHeight(newHeight, index)),\n    changeBarColor: (newColor, index) =>\n      dispatch(changeBarColor(newColor, index)),\n    dispatchStyleSwap: (styleType) => dispatch(swapStyles(styleType)),\n    dispatchColorArray: (colorArray) => dispatch(setColorArray(colorArray)),\n  }\n}\n\nexport default connect(msp, mdp)(NavBar)\n","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/BubbleSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/Body.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/rootReducer.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actionTypes.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actions.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Containers/BodyContainer.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/randomArray.js",[],{"ruleId":"43","severity":1,"message":"44","line":68,"column":13,"nodeType":"45","endLine":68,"endColumn":45},{"ruleId":"43","severity":1,"message":"44","line":94,"column":17,"nodeType":"45","endLine":94,"endColumn":81},{"ruleId":"43","severity":1,"message":"44","line":97,"column":17,"nodeType":"45","endLine":97,"endColumn":65},{"ruleId":"43","severity":1,"message":"44","line":100,"column":17,"nodeType":"45","endLine":100,"endColumn":77},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]
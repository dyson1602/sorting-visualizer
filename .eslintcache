[{"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/rootReducer.js":"1","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/NavBar.js":"2","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Containers/BodyContainer.js":"3","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/Body.js":"4","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/MergeSort.js":"5","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/RadixSort.js":"6","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actions.js":"7","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actionTypes.js":"8","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/SelectionSort.js":"9","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/QuickSort.js":"10","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/BubbleSort.js":"11","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/randomArray.js":"12"},{"size":2877,"mtime":1609621245865,"results":"13","hashOfConfig":"14"},{"size":8119,"mtime":1609619933954,"results":"15","hashOfConfig":"14"},{"size":221,"mtime":1608739070443,"results":"16","hashOfConfig":"14"},{"size":3904,"mtime":1609624822851,"results":"17","hashOfConfig":"14"},{"size":3009,"mtime":1609525434462,"results":"18","hashOfConfig":"14"},{"size":2031,"mtime":1609622997898,"results":"19","hashOfConfig":"14"},{"size":1460,"mtime":1609619733669,"results":"20","hashOfConfig":"14"},{"size":501,"mtime":1609609861104,"results":"21","hashOfConfig":"14"},{"size":1479,"mtime":1609451650156,"results":"22","hashOfConfig":"14"},{"size":2720,"mtime":1609451650156,"results":"23","hashOfConfig":"14"},{"size":1608,"mtime":1609525434461,"results":"24","hashOfConfig":"14"},{"size":519,"mtime":1609622676663,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nhkvj8",{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/rootReducer.js",["51"],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/NavBar.js",["52","53","54","55","56","57","58","59","60","61"],"import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { BubbleSort } from \"../Algorithms/BubbleSort\"\nimport { HeapSort } from \"../Algorithms/HeapSort\"\nimport { InsertionSort } from \"../Algorithms/InsertionSort\"\nimport { MergeSort } from \"../Algorithms/MergeSort\"\nimport { QuickSort } from \"../Algorithms/QuickSort\"\nimport { generateColorArray, randomizeArray } from \"../Algorithms/randomArray\"\nimport { SelectionSort } from \"../Algorithms/SelectionSort\"\nimport { RadixSort } from \"../Algorithms/RadixSort\"\nimport {\n  buildBuckets,\n  changeBarColor,\n  changeBarHeight,\n  clearBuckets,\n  setColorArray,\n  setFinishedSorting,\n  setIsSorting,\n  setMethod,\n  setRandomArray,\n  setSortedArray,\n  setSpeed,\n  swapStyles,\n} from \"../Redux/actions\"\n\nclass NavBar extends React.Component {\n  state = {\n    arrayLength: 100,\n  }\n\n  styleSwapHandler = (e) => {\n    let currentStyle = this.props.style\n    switch (currentStyle) {\n      case \"bars\":\n        return this.props.dispatchStyleSwap(\"gradient\")\n      case \"gradient\":\n        return this.props.dispatchStyleSwap(\"bars\")\n      default:\n        return this.props.dispatchStyleSwap(currentStyle)\n    }\n  }\n\n  componentDidMount() {\n    this.newArrayHandler()\n  }\n\n  arrayLengthHandler = (e) => {\n    this.setState({ arrayLength: e.target.value }, this.newArrayHandler)\n  }\n\n  newArrayHandler = () => {\n    this.props.dispatchRandomArray(randomizeArray(this.state.arrayLength))\n    this.props.dispatchColorArray(\n      generateColorArray(this.state.arrayLength, \"red\")\n    )\n    if (this.state.arrayLength < 30) {\n      this.props.dispatchSpeed(50)\n    } else if (this.state.arrayLength > 60) {\n      this.props.dispatchSpeed(5)\n    } else {\n      this.props.dispatchSpeed(30)\n    }\n  }\n\n  sortHandler = () => {\n    this.props.dispatchSetIsSorting()\n    let currentMethod = this.props.method\n    switch (currentMethod) {\n      case \"bubble\":\n        return BubbleSort(this.props)\n      case \"heap\":\n        return HeapSort(this.props)\n      case \"insertion\":\n        return InsertionSort(this.props)\n      case \"quick\":\n        return QuickSort(this.props)\n      case \"selection\":\n        return SelectionSort(this.props)\n      case \"merge\":\n        return MergeSort(this.props)\n      case \"radix\":\n        return RadixSort(this.props)\n      default:\n        return BubbleSort(this.props)\n    }\n  }\n  setSortingMethod = (method) => {\n    this.props.dispatchMethod(method)\n  }\n\n  render() {\n    return (\n      <>\n        <nav class=\"nav-extended\">\n          <div className=\"nav-wrapper\">\n            <a className=\"brand-logo right\">Sorting Algorithm Visualizer</a>\n            <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n              <li>Set Array Size: </li>\n\n              <li>\n                <form action=\"#\">\n                  <div className=\"range-field\">\n                    <input\n                      type=\"range\"\n                      id=\"test5\"\n                      min=\"10\"\n                      max=\"100\"\n                      onChange={\n                        this.props.isSorting ? null : this.arrayLengthHandler\n                      }\n                    />\n                  </div>\n                </form>\n              </li>\n              <li>\n                <div class=\"switch\">\n                  <label>\n                    <input type=\"checkbox\" />\n                    <span onClick={this.styleSwapHandler} class=\"lever\"></span>\n                  </label>\n                </div>\n              </li>\n              <li>\n                <a onClick={this.props.isSorting ? null : this.newArrayHandler}>\n                  Generate New Array\n                </a>\n              </li>\n              <li>\n                <a onClick={this.props.isSorting ? null : this.sortHandler}>\n                  Sort!\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"nav-content\">\n            <ul className=\"tabs tabs-transparent\">\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"bubble\")\n                  }\n                  className={this.props.method === \"bubble\" ? \"active\" : null}\n                >\n                  Bubble Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"insertion\")\n                  }\n                  className={\n                    this.props.method === \"insertion\" ? \"active\" : null\n                  }\n                >\n                  Insertion Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"selection\")\n                  }\n                  className={\n                    this.props.method === \"selection\" ? \"active\" : null\n                  }\n                >\n                  Selection Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"quick\")\n                  }\n                  className={this.props.method === \"quick\" ? \"active\" : null}\n                >\n                  Quick Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"heap\")\n                  }\n                  className={this.props.method === \"heap\" ? \"active\" : null}\n                >\n                  Heap Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"merge\")\n                  }\n                  className={this.props.method === \"merge\" ? \"active\" : null}\n                >\n                  Merge Sort\n                </a>\n              </li>\n              <li className=\"tab\">\n                <a\n                  onClick={\n                    this.props.isSorting\n                      ? null\n                      : () => this.setSortingMethod(\"radix\")\n                  }\n                  className={this.props.method === \"radix\" ? \"active\" : null}\n                >\n                  Radix\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </>\n    )\n  }\n}\n\nfunction msp(state) {\n  return {\n    isSorting: state.isSorting,\n    randomArray: state.randomArray,\n    sortedArray: state.sortedArray,\n    style: state.style,\n    method: state.method,\n    speed: state.speed,\n  }\n}\n\nfunction mdp(dispatch) {\n  return {\n    dispatchRandomArray: (randomArray) => dispatch(setRandomArray(randomArray)),\n    dispatchSortedArray: (sortedArray) => dispatch(setSortedArray(sortedArray)),\n    dispatchSetIsSorting: () => dispatch(setIsSorting()),\n    dispatchSetFinishedSorting: () => dispatch(setFinishedSorting()),\n    changeBarHeight: (newHeight, index) =>\n      dispatch(changeBarHeight(newHeight, index)),\n    changeBarColor: (newColor, index) =>\n      dispatch(changeBarColor(newColor, index)),\n    dispatchStyleSwap: (styleType) => dispatch(swapStyles(styleType)),\n    dispatchColorArray: (colorArray) => dispatch(setColorArray(colorArray)),\n    dispatchMethod: (methodType) => dispatch(setMethod(methodType)),\n    dispatchSpeed: (speed) => dispatch(setSpeed(speed)),\n    buildBuckets: (bucket, height) => dispatch(buildBuckets(bucket, height)),\n    clearBuckets: (bucket) => dispatch(clearBuckets(bucket)),\n  }\n}\n\nexport default connect(msp, mdp)(NavBar)\n","/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Containers/BodyContainer.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Components/Body.js",["62"],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/MergeSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/RadixSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actions.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Redux/actionTypes.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/SelectionSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/QuickSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/BubbleSort.js",[],"/Users/chrisclark/Flatiron/code/Mod4/sort-visualizer/src/Algorithms/randomArray.js",[],{"ruleId":"63","severity":1,"message":"64","line":111,"column":11,"nodeType":"65","messageId":"66","endLine":111,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":96,"column":13,"nodeType":"69","endLine":96,"endColumn":45},{"ruleId":"67","severity":1,"message":"68","line":124,"column":17,"nodeType":"69","endLine":124,"endColumn":81},{"ruleId":"67","severity":1,"message":"68","line":129,"column":17,"nodeType":"69","endLine":129,"endColumn":77},{"ruleId":"67","severity":1,"message":"68","line":138,"column":17,"nodeType":"69","endLine":145,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":150,"column":17,"nodeType":"69","endLine":159,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":164,"column":17,"nodeType":"69","endLine":173,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":178,"column":17,"nodeType":"69","endLine":185,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":190,"column":17,"nodeType":"69","endLine":197,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":202,"column":17,"nodeType":"69","endLine":209,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":214,"column":17,"nodeType":"69","endLine":221,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":10,"column":5,"nodeType":"72","messageId":"73","endLine":62,"endColumn":6},"no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]